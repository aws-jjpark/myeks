# A simple example of ClusterConfig object:
---
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: eksworkshop
  region: ap-northeast-2
  version: "1.19"

vpc: 
  id: vpc-0872d2a79110e4289
  subnets:
    public:
      ap-northeast-2a: { id: subnet-07b001f1937567fb7}
      ap-northeast-2b: { id: subnet-03811b74f76270aed}
      ap-northeast-2c: { id: subnet-02ce8af3b04458b8f}
      ap-northeast-2d: { id: subnet-0c23440ad2800c0ef}
    private:
      ap-northeast-2a: { id: subnet-0074fd1438d35d4ef}
      ap-northeast-2b: { id: subnet-0c82a7e8f40fa4268}
      ap-northeast-2c: { id: subnet-083b57160bcdc8320}
      ap-northeast-2d: { id: subnet-0693a31f5373e153b}

secretsEncryption:
  keyARN: arn:aws:kms:ap-northeast-2:584172017494:key/25a2f579-9f22-4d79-ad6f-1a468d06244b

nodeGroups:
  - name: ng-public-01
    instanceType: m5.xlarge
    desiredCapacity: 4
    minSize: 4
    maxSize: 8
    volumeSize: 100
    volumeType: gp3 
    amiFamily: AmazonLinux2
    labels:
      nodegroup-type: "frontend-workloads"
    ssh: 
        publicKeyPath: "/home/ec2-user/environment/eksworkshop.pub"
        allow: true
    iam:
      attachPolicyARNs:
      withAddonPolicies:
        autoScaler: true
        cloudWatch: true
        ebs: true
        fsx: true
        efs: true

  - name: ng-private-01
    instanceType: m5.xlarge
    desiredCapacity: 4
    privateNetworking: true
    minSize: 4
    maxSize: 8
    volumeSize: 100
    volumeType: gp3 
    amiFamily: AmazonLinux2
    labels:
      nodegroup-type: "backend-workloads"
    ssh: 
        publicKeyPath: "/home/ec2-user/environment/eksworkshop.pub"
        allow: true
    iam:
      withAddonPolicies:
        autoScaler: true
        cloudWatch: true
        ebs: true
        fsx: true
        efs: true

cloudWatch:
    clusterLogging:
        enableTypes: ["api", "audit", "authenticator", "controllerManager", "scheduler"]

